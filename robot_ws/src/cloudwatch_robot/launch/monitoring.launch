<launch>
  <!-- 
        Include this file to enable CloudWatch monitoring of operational and health metrics. 
        Your robot will report metrics to CloudWatch Metrics and logs to CloudWatch Logs.
   
        See rotate.launch for example <include> usage. 
  -->

  <!-- Optional AWS region, if empty uses the config defaults -->
  <arg name="aws_region" value="$(optenv ROS_AWS_REGION)" doc="AWS region override, defaults to config .yaml if unset"/>

  <!-- Optional launch ID, if specified, used for suffixing resource names -->
  <arg name="launch_id" value="$(optenv LAUNCH_ID)" doc="Used for resource name suffix if specified"/>

  <!-- Report speed metrics to CloudWatch -->
  <node pkg="cloudwatch_robot" type="monitor_speed" name="monitor_speed" output="log"/>

  <!-- Report distance to nearest obstacle metric to CloudWatch -->
  <node pkg="cloudwatch_robot" type="monitor_obstacle_distance" name="monitor_obstacle_distance" output="log"/>

  <!-- Report distance to goal metric to CloudWatch (does nothing if there isn't a planned goal) -->
  <node pkg="cloudwatch_robot" type="monitor_distance_to_goal" name="monitor_distance_to_goal" output="log"/>

  <!-- Report health Metrics -->
  <node pkg="health_metric_collector" type="health_metric_collector" name="health_metric_collector" respawn="true" output="log">
      <!-- metrics sampling interval in seconds -->
    <rosparam command="load" file="$(find cloudwatch_robot)/config/health_metrics_config.yaml" />
  </node>

  <!-- Enable CloudWatch Metrics reporting -->
  <arg name="aws_metrics_namespace" default="robomaker_cloudwatch_monitoring_example"/>
  <node pkg="cloudwatch_metrics_collector" type="cloudwatch_metrics_collector" name="cloudwatch_metrics_collector">
    <rosparam command="load" file="$(find cloudwatch_robot)/config/cloudwatch_metrics_config.yaml" />
    <rosparam if="$(eval aws_region != '')" param="/cloudwatch_metrics_collector/aws_client_configuration/region" subst_value="true">$(arg aws_region)</rosparam>
    <rosparam if="$(eval launch_id != '')" param="/cloudwatch_metrics_collector/aws_metrics_namespace" subst_value="true">$(arg aws_metrics_namespace)-$(arg launch_id)</rosparam>
  </node>

  <!-- Enable CloudWatch logging, send /rosout to CW Logs -->
  <arg name="log_group_name" default="robomaker_cloudwatch_monitoring_example" />
  <node pkg="cloudwatch_logger" type="cloudwatch_logger" name="cloudwatch_logger">
    <rosparam command="load" file="$(find cloudwatch_robot)/config/cloudwatch_logs_config.yaml" />
    <rosparam if="$(eval aws_region != '')" param="/cloudwatch_logger/aws_client_configuration/region" subst_value="true">$(arg aws_region)</rosparam>
    <rosparam if="$(eval launch_id != '')" param="/cloudwatch_logger/log_group_name" subst_value="true">$(arg log_group_name)-$(arg launch_id)</rosparam>
  </node>
</launch>
